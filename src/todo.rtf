{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
1. use only upper triangular of each term in H and in H, make full H only at the very last stage, \
this will reduce mem usage to almost half, plus this half mem then go to pool.\
\
2. use np.arrays instead of lists when calc matrix elemets of H\'85. ??\
3. H as np arrays will also avoid making a copy when making sparse coo matrix.\
4. OR do all H calc in fortran??? mpi for parallelisation\'85 \
}